// Описать функцию словами, рассказать для чего в ней нужны дженерики

// 1 функция
// в данном случае дженерик отвечвет за возможность функции возвращать принимать значения любого типа при этом мы будем знать какой тип возвращаем, в отличие от того, если бы функция возвращала any
declare function identity<T>(arg: T): T;

// 2 функция
// в данном случае дженерик дает возможность классу принимать данные любого типа и исходя из них оперировать ими в зависимости от конкретного типа данных,
// например, если мы объявим тип number при вызове конструктора клвсса, то метод add будет принимать только числа, так же и с другими типами
class GenericNumber<T> {
  zeroValue: T;
  add: (x: T, y: T) => T;
}

let myGenericNumber = new GenericNumber<number>();
